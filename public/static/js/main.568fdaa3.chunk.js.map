{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","components/auth/RegisterScreen.js","components/aegis/CrearPostulanteScreen.js","router/AppRouter.js","CalendarApp.js","index.js","assets/icono-atras-png-5.png"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","className","src","alt","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","to","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","PrivateRoute","RegisterScreen","rName","rRut","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","icono_atras","CrearPostulanteScreen","loading","receiptId","price1","price2","handleChange","setState","createAndDownloadPdf","axios","post","then","get","responseType","res","pdfBlob","Blob","saveAs","this","disabled","aria-hidden","AppRouter","location","href","exact","path","CalendarApp","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.568fdaa3.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    \n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout event',\n    \n    evetStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n// {\n//     id: 'askdjhaksdjas',\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Fernando'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n\n        default:\n            return state;\n    }\n\n}\n\n\n","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import moment from 'moment'\n\n\nexport const prepareEvents = ( events = [] ) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate(),\n        })\n    );\n\n}","import Swal from 'sweetalert2';\n\nimport { types } from '../types/types';\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\n\n\nexport const eventStartAddNew = ( event ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            console.log(body)\n\n            if ( body.ok ) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( event );\n                dispatch( eventAddNew( event ) );\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n\n    }\n}\n\n\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\n\n\nexport const eventStartUpdate = ( event ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'events' );\n            const body = await resp.json();\n\n            const events = prepareEvents( body.eventos );\n            dispatch( eventLoaded( events ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout =() => ({ type: types.eventLogout });","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport Swal from 'sweetalert2';\nimport { eventLogout } from './events';\n\n\n\nexport const startLogin = ( email, password ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n        \n\n    }\n}\n\nexport const startRegister = ( email, password, name ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n\n        const resp = await fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\n\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( eventLogout() );\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\n\n\nimport './login.css';\nimport { Link } from 'react-router-dom';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    \n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: '',\n        lPassword: ''\n    });    \n    \n    const { lEmail, lPassword } = formLoginValues;    \n\n    const handleLogin = ( e ) => {\n        e.preventDefault();\n        dispatch( startLogin( lEmail, lPassword ) );\n    }\n\n    return (\n        <div className=\"outter login-container\">\n            <div className=\"middle\">\n                <div className=\"inner login-form-1\">\n                    <div className=\"intro-text\">\n                        <h2>AEGIS</h2>\n                    </div> \n                    <div className=\"user-icon\">\n                        <img src=\"https://i.pinimg.com/originals/ff/a0/9a/ffa09aec412db3f54deadf1b3781de2a.png\" alt=\"usuario\"/>\n                    </div>                    \n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo Electronico\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Iniciar Sesión\" \n                            />\n                        </div>\n                    </form>                    \n                </div>                \n                <div className=\"inner registro-div\">\n                    <p>¿No estas registrado?</p>\n                    <div className=\"registrate\">\n                        <Link to=\"/register\"><button>Crea una cuenta</button></Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth );\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n            <Link to=\"/crearPostulante\"><h1 className=\"aegis-logo\">AEGIS</h1></Link>\n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate( formValues ) )\n        } else {\n            dispatch( eventStartAddNew(formValues) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } = useSelector( state => state.auth );\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n    useEffect(() => {\n        \n        dispatch( eventStartLoading() );\n\n    }, [ dispatch ])\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n\n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport icono_atras  from \"../../assets/icono-atras-png-5.png\";\r\nimport './login.css';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();    \r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: '',\r\n        rRut: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: ''\r\n    });    \r\n    \r\n    const { rName, rRut, rEmail, rPassword1, rPassword2 } = formRegisterValues;    \r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales','error');\r\n        }\r\n        console.log('?')\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"outter login-container\">\r\n            <div className=\"middle\">\r\n                <div className=\"inner login-form-2\">\r\n                    <Link to=\"/\" className=\"icono-atras\"><img src={ icono_atras } alt=\"icono-atras\"/></Link>\r\n                    <div className=\"intro-text\">\r\n                        <h2>AEGIS</h2>\r\n                    </div> \r\n                    <div className=\"user-icon\">\r\n                        <img src=\"https://i.pinimg.com/originals/ff/a0/9a/ffa09aec412db3f54deadf1b3781de2a.png\" alt=\"usuario\"/>\r\n                    </div>                    \r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre Completo\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Rut\"\r\n                                name=\"rRut\"\r\n                                value={ rRut }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo Electornico\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport './aegis.css';\r\nimport { saveAs } from 'file-saver';\r\n\r\nclass CrearPostulanteScreen extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        name: '',\r\n        receiptId: 0,\r\n        price1: 0,\r\n        price2: 0\r\n      }  \r\n    \r\n      handleChange = ({ target: { value, name }}) => this.setState({ [name]: value})\r\n    \r\n      createAndDownloadPdf = () => {\r\n        // console.log(this.state.loading);\r\n        this.setState({ ...this.state, loading: true }, () => {\r\n          // console.log(this.state.loading);\r\n          axios.post('/create-pdf', this.state)\r\n          .then(() => axios.get('fetch-pdf', { responseType: 'blob' }))\r\n          .then((res) => {\r\n          \r\n            const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n    \r\n            saveAs(pdfBlob, 'newPdf.pdf');\r\n            this.setState({ loading : false });\r\n            // console.log(this.state.loading);\r\n          })\r\n          axios.post('/create-pdf2', this.state)\r\n          .then(() => axios.get('fetch-pdf2', { responseType: 'blob' }))\r\n          .then((res) => {\r\n          \r\n            const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n    \r\n            saveAs(pdfBlob, 'newPdf2.pdf');\r\n            this.setState({ loading : false });\r\n            // console.log(this.state.loading);\r\n          })\r\n        });\r\n        \r\n        \r\n      }\r\n\r\n    render() {\r\n\r\n        const { loading } = this.state;\r\n\r\n        return ( \r\n            <div className=\"crear-screen\">\r\n                <Navbar />\r\n                <form id=\"create-customer\">\r\n                <div className=\"fakeApp\">\r\n                    <input type=\"text\" placeholder=\"Name\" name=\"name\" onChange={this.handleChange} />\r\n                    <input type=\"number\" placeholder=\"Receipt ID\" name=\"receiptId\" onChange={this.handleChange} />\r\n                    <input type=\"number\" placeholder=\"Price 1\" name=\"price1\" onChange={this.handleChange} />\r\n                    <input type=\"number\" placeholder=\"Price 2\" name=\"price2\" onChange={this.handleChange} />\r\n                    <button className=\"button\" onClick={this.createAndDownloadPdf} disabled={loading}>\r\n                    { loading && <i className=\"fas fa-spinner fa-pulse\" aria-hidden=\"true\"></i> }\r\n                    { loading ? <span>Preparando PDF</span> : <span>Descargar PDF</span> }         \r\n                    </button>\r\n                </div>\r\n                <section className=\"inner-container1\">\r\n                    <h2>Postulante</h2> \r\n                    <div className=\"inner-section\">\r\n                                          \r\n                            <input className=\"input1\" type=\"text\" name=\"nombre\" placeholder=\"Nombre\"/>\r\n                            <input className=\"input1\" type=\"text\"name=\"apellidopaterno\" placeholder=\"Apellido Paterno\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"apellidomaterno\" placeholder=\"Apellido Materno\"/>\r\n                            <input className=\"input2\" type=\"text\" name=\"rut\" placeholder=\"RUT\"/>\r\n                            <input className=\"input2\" type=\"text\" name=\"fechadenac\" placeholder=\"Fecha de Nac.\"/>\r\n                            <input className=\"input2\" type=\"text\" name=\"estadocivil\" placeholder=\"Estado Civil\"/>\r\n                            <input className=\"input2\" type=\"text\" name=\"comuna\" placeholder=\"Comuna\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"provincia\" placeholder=\"Provincia\"/>\r\n                            <input className=\"input1\" type=\"email\" name=\"email\" placeholder=\"E-mail\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"fonocontacto\" placeholder=\"Fono Contacto\"/>                    \r\n                    </div>\r\n                    <h2>Conyugue</h2> \r\n                    <div className=\"inner-section\">\r\n                                           \r\n                            <input className=\"input1\" type=\"text\" name=\"nombre\" placeholder=\"Nombre\"/>\r\n                            <input className=\"input1\" type=\"text\"name=\"apellidopaterno\" placeholder=\"Apellido Paterno\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"apellidomaterno\" placeholder=\"Apellido Materno\"/>\r\n                            <input className=\"input2\" type=\"text\" name=\"rut\" placeholder=\"RUT\"/>\r\n                            <input className=\"input2\" type=\"text\" name=\"fechadenac\" placeholder=\"Fecha de Nac.\"/>\r\n                            <input className=\"input2\" type=\"text\" name=\"estadocivil\" placeholder=\"Estado Civil\"/>\r\n                            <input className=\"input2\" type=\"text\" name=\"comuna\" placeholder=\"Comuna\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"provincia\" placeholder=\"Provincia\"/>\r\n                            <input className=\"input1\" type=\"email\" name=\"email\" placeholder=\"E-mail\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"fonocontacto\" placeholder=\"Fono Contacto\"/>                    \r\n                    </div>\r\n                </section>\r\n                <section className=\"inner-container1\">\r\n                    <h2>Datos Comunes</h2>\r\n                    <div className=\"inner-section datos-comunes\">                    \r\n                            <input className=\"input1\" type=\"text\" name=\"rol\" placeholder=\"Rol\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"tipodevivienda\" placeholder=\"Tipo de vivienda\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"domicilio\" placeholder=\"Domicilio\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"materialidad\" placeholder=\"Materialidad Predominante\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"numerofinal\" placeholder=\"Numero Final\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"comunafinal\" placeholder=\"Comuna Final\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"poblacionfinal\" placeholder=\"Poblacion Final\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"provinciafinal\" placeholder=\"Provincia Final\"/>\r\n                            <input className=\"input1\" type=\"text\" name=\"ocupantes\" placeholder=\"Ocupantes de la Viv.\"/>  \r\n                        \r\n                    </div>\r\n                    <div></div>\r\n                </section>\r\n                <section className=\"inner-container imprimir-crear\">\r\n                    <h2>Obersvaciones</h2>\r\n                    <div className=\"observaciones\">\r\n                        <textarea name=\"observaciones\" id=\"\" placeholder=\"Observaciones\"></textarea>\r\n                        <div className=\"botones\">\r\n                            <input type=\"button\" value=\"Guardar\"/>\r\n                            <input type=\"button\" value=\"Borrar\"/>\r\n                            <input type=\"button\" value=\"Imprimir\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n    \r\n                    </div>\r\n                </section>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n \r\nexport default CrearPostulanteScreen;","import React, { useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,   \n  } from 'react-router-dom';\n  \nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { startChecking } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\nimport CrearPostulanteScreen from '../components/aegis/CrearPostulanteScreen';\n\n\nexport const AppRouter = () => {\n\n   \n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector( state => state.auth);\n\n    console.log(window.location.href);\n\n    useEffect(() => {\n        \n        dispatch( startChecking() );\n\n    }, [dispatch])\n\n    if ( checking ) {\n        return (<h5>Espere...</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={ LoginScreen }\n                        isAuthenticated={ !!uid }\n                    />\n                    <PublicRoute \n                        exact \n                        path=\"/register\" \n                        component={ RegisterScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ CalendarScreen } \n                        isAuthenticated={ !!uid }\n                    />\n                    <PrivateRoute \n                        exact \n                        path=\"/crearPostulante\" \n                        component={ CrearPostulanteScreen } \n                        isAuthenticated={ !!uid }\n                    />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/icono-atras-png-5.a08e9e02.png\";"],"sourceRoot":""}